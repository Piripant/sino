world.add_arm(200.0, 1.0);
world.add_arm(100.0, -2.0);
world.add_arm(50.0, 4.0);
world.add_arm(25.0, -8.0);


world.add_arm(200.0, 1.0);
world.add_arm(100.0, 2.0);
world.add_arm(50.0, -4.0);
world.add_arm(25.0, -8.0);


world.add_arm(200.0, -1.0);
world.add_arm(100.0, 2.0);
world.add_arm(50.0, 4.0);
world.add_arm(25.0, -8.0);


world.add_arm(200.0, 1.0);
world.add_arm(100.0, 2.0);
world.add_arm(50.0, -4.0);
world.add_arm(25.0, -8.0);
world.add_arm(25.0/2.0, 16.0);

10 100
100 10

10 200
100 30

60 10
50 20
40 30
30 40
20 50
10 60

60 10
100 30

100 10
100 50

100 10
100 200

100 20
25 70

fn star(world: &mut World, arms: u32) {
    for i in 0..arms {
        let length = 200.0 / 2_u32.pow(i) as f64;
        let velocity = 2.0f64.powi(i as i32) * if i % 2 == 0 { 1.0 } else { -1.0 };
        world.add_arm(length, velocity);
        println!("{}, {}", length, velocity);
    }
}

fn fish(world: &mut World, arms: u32) {
    for i in 0..arms {
        let length = 200.0 / 2u32.pow(i) as f64;
        let velocity = 2.0f64.powi(i as i32) * if i >= arms / 2 { -1.0 } else { 1.0 };
        world.add_arm(length, velocity);
        println!("{}, {}", length, velocity);
    }
}

fn triang(world: &mut World, arms: u32) {
    for i in 0..arms {
        let length = 200.0 / 2_u32.pow(i) as f64;
        let velocity = (i + 1) as f64 * if i % 2 == 0 { 1.0 } else { -1.0 };
        world.add_arm(length, velocity);
        println!("{}, {}", length, velocity);
    }
}

fn random(world: &mut World, arms: u32) {
    for i in 0..arms {
        let length = rand::random::<f64>() * 100.0;
        let velocity = rand::random::<f64>() * 9.0 + 1.0;
        world.add_arm(length, velocity);
    }
}